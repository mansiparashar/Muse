{"ast":null,"code":"var _jsxFileName = \"/Users/vedantatrivedi/Downloads/tarp/reactapp/src/components/Calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-calendar';\nimport './Calendar.css';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date(),\n      selectedDate: new Date(),\n      posts: []\n    };\n    this.onClickDay = this.onClickDay.bind(this);\n    this.setMoodColor = this.setMoodColor.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:80/get_calendar').then(response => response.json()).then(({\n      posts\n    }) => {\n      this.setState({\n        posts\n      });\n    });\n  } // onClickDay(date) sets the selectedDate and opens the corresponding entry\n\n\n  onClickDay(date) {\n    this.setState({\n      selectedDate: date\n    }); // should open corresponding entry\n  } // setMoodColor(date) sets the mood coloring scale for the given date\n  // if there was an entry on that date (else leaves it blank)\n\n\n  setMoodColor({\n    date\n  }) {\n    // format given date\n    let entryDate = new Date(date).toISOString().substr(0, 10);\n    let entryScore;\n\n    for (let i = 0; i < this.state.posts.length; i++) {\n      // loop through array until matching entry\n      console.log(this.state.posts[i].date);\n\n      if (this.state.posts[i].date === entryDate) {\n        // sets mood rate of the entry\n        entryScore = this.state.posts[i].score;\n        console.log(\"entryScore is \" + entryScore);\n        break;\n      }\n    } // sets mood coloring\n\n\n    if (entryScore >= 85) {\n      return 'great-mood';\n    } else if (entryScore >= 65) {\n      return 'good-mood';\n    } else if (entryScore >= 45) {\n      return 'ok-mood';\n    } else if (entryScore < 45 && entryScore >= 10) {\n      return 'bad-mood';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Your mood calendar!\"), React.createElement(DatePicker, {\n      key: Math.random().toString() // can't have future entries\n      ,\n      maxDate: this.state.today // select an entry\n      ,\n      onClickDay: this.onClickDay // sets the mood coloring scale\n      ,\n      tileClassName: this.setMoodColor,\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/vedantatrivedi/Downloads/tarp/reactapp/src/components/Calendar/Calendar.js"],"names":["React","Component","DatePicker","Calendar","constructor","props","state","today","Date","selectedDate","posts","onClickDay","bind","setMoodColor","componentDidMount","fetch","then","response","json","setState","date","entryDate","toISOString","substr","entryScore","i","length","console","log","score","render","Math","random","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAO,gBAAP;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IAAIC,IAAJ,EADE;AAETC,MAAAA,YAAY,EAAG,IAAID,IAAJ,EAFN;AAGTE,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEU,CAAC;AAAEN,MAAAA;AAAF,KAAD,KAAe;AACjB,WAAKS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACH,KAJL;AAKH,GAnB4B,CAqB7B;;;AACAC,EAAAA,UAAU,CAACS,IAAD,EAAO;AACb,SAAKD,QAAL,CAAc;AAACV,MAAAA,YAAY,EAACW;AAAd,KAAd,EADa,CAEb;AACH,GAzB4B,CA2B7B;AACA;;;AACAP,EAAAA,YAAY,CAAC;AAACO,IAAAA;AAAD,GAAD,EAAS;AACjB;AACA,QAAIC,SAAS,GAAG,IAAIb,IAAJ,CAASY,IAAT,EAAeE,WAAf,GAA6BC,MAA7B,CAAoC,CAApC,EAAuC,EAAvC,CAAhB;AACA,QAAIC,UAAJ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnB,KAAL,CAAWI,KAAX,CAAiBgB,MAArC,EAA6CD,CAAC,EAA9C,EAAiD;AAC7C;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWI,KAAX,CAAiBe,CAAjB,EAAoBL,IAAhC;;AACA,UAAI,KAAKd,KAAL,CAAWI,KAAX,CAAiBe,CAAjB,EAAoBL,IAApB,KAA6BC,SAAjC,EAA2C;AACvC;AACAG,QAAAA,UAAU,GAAG,KAAKlB,KAAL,CAAWI,KAAX,CAAiBe,CAAjB,EAAoBI,KAAjC;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAkBJ,UAA9B;AACA;AACH;AACJ,KAbgB,CAcjB;;;AACA,QAAIA,UAAU,IAAI,EAAlB,EAAsB;AAClB,aAAO,YAAP;AACH,KAFD,MAEO,IAAIA,UAAU,IAAI,EAAlB,EAAsB;AACzB,aAAO,WAAP;AACH,KAFM,MAEA,IAAIA,UAAU,IAAI,EAAlB,EAAsB;AACzB,aAAO,SAAP;AACH,KAFM,MAEA,IAAGA,UAAU,GAAE,EAAZ,IAAkBA,UAAU,IAAG,EAAlC,EAAqC;AACxC,aAAO,UAAP;AACH;AACJ;;AAEDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,UAAD;AACI,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADT,CAEI;AAFJ;AAGI,MAAA,OAAO,EAAE,KAAK3B,KAAL,CAAWC,KAHxB,CAII;AAJJ;AAKI,MAAA,UAAU,EAAE,KAAKI,UALrB,CAMI;AANJ;AAOI,MAAA,aAAa,EAAE,KAAKE,YAPxB;AAQI,MAAA,SAAS,EAAE,OARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAeH;;AAvE4B;;AA0EjC,eAAeV,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport DatePicker from 'react-calendar';\nimport './Calendar.css';\n\n\nclass Calendar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            today: new Date(),\n            selectedDate : new Date(),\n            posts: [],\n        };\n        this.onClickDay = this.onClickDay.bind(this);\n        this.setMoodColor = this.setMoodColor.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:80/get_calendar')\n            .then(response => response.json())\n            .then(({ posts }) => {\n                this.setState({ posts });\n            });\n    }\n\n    // onClickDay(date) sets the selectedDate and opens the corresponding entry\n    onClickDay(date) {\n        this.setState({selectedDate:date});\n        // should open corresponding entry\n    }\n\n    // setMoodColor(date) sets the mood coloring scale for the given date\n    // if there was an entry on that date (else leaves it blank)\n    setMoodColor({date}) {\n        // format given date\n        let entryDate = new Date(date).toISOString().substr(0, 10);\n        let entryScore;\n        for (let i = 0; i < this.state.posts.length; i++){\n            // loop through array until matching entry\n            console.log(this.state.posts[i].date);\n            if (this.state.posts[i].date === entryDate){\n                // sets mood rate of the entry\n                entryScore = this.state.posts[i].score;\n                console.log(\"entryScore is \"+ entryScore);\n                break;\n            }\n        }\n        // sets mood coloring\n        if (entryScore >= 85) {\n            return 'great-mood';\n        } else if (entryScore >= 65) {\n            return 'good-mood';\n        } else if (entryScore >= 45) {\n            return 'ok-mood';\n        } else if(entryScore <45 && entryScore >=10){\n            return 'bad-mood';\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"text-center\">Your mood calendar!</h1>\n                <DatePicker\n                    key={Math.random().toString()}\n                    // can't have future entries\n                    maxDate={this.state.today}\n                    // select an entry\n                    onClickDay={this.onClickDay}\n                    // sets the mood coloring scale\n                    tileClassName={this.setMoodColor}\n                    className={\"w-100\"}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}